Project
========
Title		:	Employee Management System 

Environments 	:	Java 8, Spring Boot, ReactJS 

Database	:	MySQL 

Tools		:	Maven, POSTMAN, GIT/GITHUB

IDE's		:	VSC , STS/Intellij

Client		:	Coderu, Bridgesoft, WinIT, Alladi.

Duration	:	1 Month.

Members		:	3 members.


				Employee Management System 
					|
	|---------------------------------------------------------------------------|
   FrontEnd									BackEnd
  (ReactJS)									(SpringBoot)



BackEnd Development
====================

Diagram: Project-Day1.1

project structure
-----------------

springboot-backend
	|
	|---src/main/java
		|
		|---com.ihub.www (base package)
			|
			|---springboot-backendApplication.java
		|
		|---com.ihub.www.controller
			|
			|---EmployeeController.java
		|
		|---com.ihub.www.service		
			|
			|---EmployeeService.java
		|
		|---com.ihub.www.repo
			|
			|---EmployeeRepository.java (interface)
		|
		|---com.ihub.www.model 
			|
			|---Employee.java
		|
		|---com.ihub.www.exception
			|
			|---ResourceNotFoundException.java
			
	|
	|---src/main/resources
	|
	|
	|---pom.xml 


step1:
------
	Create a spring boot starter project i.e springboot-backend.
	ex:
		starter: 
				spring web
				spring data jpa 
				mysql driver 
				lombok 

step2:
------
	Create a schema and use the schema in mysql database.
	ex:
		MySQL> create schema employee_management_system
		
		MySQL> use employee_management_system 

step3:
-----
	Create a "employees" table inside employee_management_system database.
	ex:	
		MySQL> create table employees(
					id int(3) AUTO_INCREMENT,
					first_name varchar(10),
					last_name varchar(10),
					email varchar(15),
					primary key(id)
					);
		

		MySQL> insert into employees values(1,"Alan","Morries","alan@gmail.com");
		MySQL> insert into employees values(2,"Erick","Anderson","erick@gmail.com");
		MySQL> commit; 
		
step4:
-----
	Configure server port and mysql database properties inside application.properties file.

application.properties
----------------------
server.port=9090

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/employee_management_system
spring.datasource.username=root
spring.datasource.password=root


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect



step5:
--------
	Create a "Employee" model class inside "com.ihub.www.model" package.

Employee.java
-------------
package com.ihub.www.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name="employees")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Employee 
{
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;
	
	@Column
	private String firstName;
	
	@Column
	private String lastName;
	
	@Column
	private String email;
}









step6:
--------
	Create a "EmployeeRepository" interface inside "com.ihub.www.repo" package.

EmployeeRepository.java
------------------------
package com.ihub.www.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.ihub.www.model.Employee;

@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Long> 
{

}































































